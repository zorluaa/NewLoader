local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local FOV_RADIUS = 75 -- Adjusted for 75 FOV range
local Target = nil

-- Create the FOV circle UI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local FOVCircle = Instance.new("Frame", ScreenGui)
FOVCircle.Size = UDim2.new(0, FOV_RADIUS * 2, 0, FOV_RADIUS * 2)
FOVCircle.Position = UDim2.new(0, Mouse.X - FOV_RADIUS, 0, Mouse.Y - FOV_RADIUS)
FOVCircle.BackgroundTransparency = 0.5
FOVCircle.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
FOVCircle.BorderSizePixel = 0
FOVCircle.Visible = true

-- Function to check if a target is inside the FOV circle
local function isTargetInFOV(target)
    local screenPoint, onScreen = Camera:WorldToViewportPoint(target.Position)
    if onScreen then
        local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
        return distance <= FOV_RADIUS
    end
    return false
end

-- Get the closest enemy inside the FOV
local function getBestTarget()
    local closestDistance = math.huge
    local bestTarget = nil

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            if isTargetInFOV(head) then
                local distance = (head.Position - LocalPlayer.Character.Head.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    bestTarget = head
                end
            end
        end
    end
    return bestTarget
end

-- Silent Aim for Guns
local function shootGun()
    Target = getBestTarget()
    if Target then
        local gun = LocalPlayer.Character:FindFirstChildOfClass("Tool")
        if gun then
            local bulletOrigin = Camera.CFrame.Position
            local aimDirection = (Target.Position - bulletOrigin).unit * 1000

            local ray = Ray.new(bulletOrigin, aimDirection)
            local hit, position = workspace:FindPartOnRayWithIgnoreList(ray, {LocalPlayer.Character})

            if hit then
                -- Simulate bullet hit
                ReplicatedStorage:FindFirstChild("GunHitEvent"):FireServer(Target, position)
            end
        end
    end
end

-- Silent Aim for Knives
local function attackWithKnife()
    Target = getBestTarget()
    if Target then
        local knife = LocalPlayer.Character:FindFirstChildOfClass("Tool")
        if knife then
            -- Simulate knife hit
            ReplicatedStorage:FindFirstChild("KnifeHitEvent"):FireServer(Target)
        end
    end
end

-- Update FOV circle position
RunService.RenderStepped:Connect(function()
    FOVCircle.Position = UDim2.new(0, Mouse.X - FOV_RADIUS, 0, Mouse.Y - FOV_RADIUS)
end)

-- Bind to mouse inputs
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        shootGun()
        attackWithKnife()
    end
end)
